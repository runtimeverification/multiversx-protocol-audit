addShard(1)
addShard(2)
addAccount(1, "A1", false)
addAccount(2, "A2", false)
addAccount(2, "A3", false)

addUserTx( 
    issue( addr(1, "A1"), 1, 100 )
)

#wait 

addUserTx( 
    transfer(
        addr(1, "A1"),
        addr(2, "A2"),
        1, 20, false
    )
)


addUserTx( 
    transfer(
        addr(1, "A1"),
        addr(2, "A3"),
        1, 20, false
    )
)

#wait

assert("A1 initial balance = 60", 60 == getBalance(addr(1, "A1"), 1))
assert("A2 initial balance = 20", 20 == getBalance(addr(2, "A2"), 1))
assert("A2 initial balance = 20", 20 == getBalance(addr(2, "A3"), 1))

// Phase 1: Add transfer role for account 2

addUserTx( 
    setSpecialRole( addr(1, "A1"), addr(2, "A2"), 1, ESDTRoleTransfer, true )
)

#wait

// cannot transfer from A1 to A3 because the token is limited and these accounts does not 
// have the transfer role 

addUserTx( 
    transfer(
        addr(1, "A1"),
        addr(2, "A3"),
        1, 10, false
    )
)

// cannot transfer from A1 to A2 because the token is limited and A2 is on another shard
addUserTx( 
    transfer(
        addr(1, "A1"),
        addr(2, "A2"),
        1, 10, false
    )
)

#wait


assert("A1 balance = 60", 60 == getBalance(addr(1, "A1"), 1))
assert("A2 balance = 20", 20 == getBalance(addr(2, "A2"), 1))
assert("A3 balance = 20", 20 == getBalance(addr(2, "A3"), 1))

// A2 can send 
addUserTx( 
    transfer(
        addr(2, "A2"),
        addr(1, "A1"),
        1, 5, false
    )
)

addUserTx( 
    transfer(
        addr(2, "A2"),
        addr(2, "A3"),
        1, 5, false
    )
)

#wait 

assert("A1 balance = 65", 65 == getBalance(addr(1, "A1"), 1))
assert("A2 balance = 10", 10 == getBalance(addr(2, "A2"), 1))
assert("A3 balance = 25", 25 == getBalance(addr(2, "A3"), 1))

addUserTx( 
    transfer(
        addr(2, "A3"),
        addr(2, "A2"),
        1, 5, false
    )
)

#wait

assert("A1 balance = 65", 65 == getBalance(addr(1, "A1"), 1))
assert("A2 balance = 15", 15 == getBalance(addr(2, "A2"), 1))
assert("A3 balance = 20", 20 == getBalance(addr(2, "A3"), 1))
